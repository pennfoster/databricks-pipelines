name: Pull Request Checks

on: 
  pull_request:
    branches:
      - 'staging'
    paths:
      - 'orchestration/**'
  
jobs:
  get_updated_job_files:
    runs-on: ubuntu-latest
    environment: development
    outputs:
      matrix: ${{ steps.repo_files.outputs.link_list }}
    steps:
      - name: Get repo job files
        id: repo_files
        run: >
          LINK_LIST=$(curl \
            -L 'https://api.github.com/repos/pennfoster/databricks-pipelines/contents/orchestration/dbricks_jobs?ref=${{ github.head_ref }}' \
            -H 'Accept: application/vnd.github+json' \
            -H 'X-GitHub-Api-Version: 2022-11-28' |
            jq -c [".[].download_url"])
          echo "link_list=$LINK_LIST" >> "$GITHUB_OUTPUT"
  
  # TODO assure unique job names

  assure_cicd_tag:
    runs-on: ubuntu-latest
    environment: development
    needs: get_updated_job_files
    strategy:
      matrix:
        job_content: ${{ fromJson(needs.get_updated_job_files.outputs.matrix) }}
    steps:
      - name: Set variables
        id: job_vars
        run: >
          JOB_VARS=$(curl -L ${{ matrix.job_content }})
          echo "cicd_tag=$($JOB_VARS | jq -r '.tags.workflow')" >> "$GITHUB_OUTPUT"
          echo "task_filepaths=$($JOB_VARS | jq -r '[.tasks.[].notebook_task.notebook_path]')" >> "$GITHUB_OUTPUT"
      - name: Echo tag
        run: >
          echo ${{ steps.job_vars.outputs.cicd_tag }}
      - name: Echo filepaths
        run: >
          echo ${{ steps.job_vars.outputs.task_filepaths }}
    
# if [ "$CICD_TAG" != "CI/CD" ]
#   then
#     echo $CICD_TAG
#     echo "CI/CD"
#     echo "Job @ ${{ matrix.job_content }} missing required \"workflow: CI/CD\" tag"
#     exit 1
# fi